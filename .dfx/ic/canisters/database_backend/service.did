type Username = text;
type UserRecord = 
 record {
   avatar: AvatarID;
   description: Description;
   friends: vec UserID;
   registrationDate: RegistrationDate;
   userId: UserID;
   username: Username;
 };
type UserID = principal;
type UserDetails = 
 record {
   friends: vec FriendDetails;
   user: UserRecord;
 };
type RegistrationDate = int;
type FriendDetails = 
 record {
   avatar: AvatarID;
   userId: UserID;
   username: Username;
 };
type Description = text;
type AvatarID = nat;
service : {
  addFriend: (UserID) -> (bool, text);
  getFriendsList: () -> (opt vec UserID) query;
  getUserDetails: (UserID) -> (opt UserDetails) query;
  registerUser: (Username, AvatarID) -> (bool, UserID);
  searchUserByPrincipal: (UserID) -> (opt UserRecord) query;
  searchUserByUsername: (Username) -> (vec UserRecord) query;
  updateAvatar: (AvatarID) -> (bool, UserID);
  updateDescription: (Description) -> (bool, UserID);
  updateUsername: (Username) -> (bool, UserID);
}
